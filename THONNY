from machine import UART, Pin
import time

# 游녤 Inicializa UART con pines RX y TX del ESP32-C3
uart = UART(1, baudrate=115200, tx=Pin(21), rx=Pin(20))
time.sleep(1)

# 游녤 Funci칩n para enviar comandos AT al m칩dulo LoRa (Reyax)
def configurar_reyax():
    comandos = [
        "AT+ADDRESS=3",
        "AT+NETWORKID=5",
        "AT+PARAMETER=9,7,1,12"
    ]
    for cmd in comandos:
        uart.write((cmd + "\r\n").encode())
        time.sleep(0.3)
        while uart.any():
            uart.readline()  # 游녤 Limpia cualquier respuesta

configurar_reyax()
print("\n游니 ESP32-C3 listo. Esperando datos LoRa...\n")

# 游녤 Bucle principal: espera y procesa datos recibidos
while True:
    if uart.any():
        try:
            linea = uart.readline().decode().strip()
            if linea.startswith("+RCV="):  # 游녤 Llega un mensaje v치lido

                partes = linea.split(",")

                temp = None
                humedad = None
                riego = None

                # 游녤 Procesa cada parte del mensaje
                for parte in partes:
                    if parte.startswith("T:"):
                        try:
                            temp = float(parte[2:].replace("춿C", "").replace("%", ""))
                        except:
                            print("丘멆잺 Error al convertir temperatura:", parte[2:])
                    elif parte.startswith("H:"):
                        try:
                            valor = parte[2:].replace("%", "").strip()
                            humedad = int(valor)
                        except:
                            print("丘멆잺 Error al convertir humedad:", parte[2:])
                    elif parte.startswith("R:"):
                        riego = parte[2:].strip()

                # 游녤 Si todo se recibi칩 bien, se muestra en consola
                if temp is not None and humedad is not None and riego is not None:
                    print(f"TEMP:{temp}")
                    print(f"HUM:{humedad}")
                    print(f"RIEGO:{riego}")
        except Exception as e:
            print("丘멆잺 Error:", e)

    time.sleep(0.1)  # 游녤 Espera peque침a para no saturar CPU
